# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        # With stack
        #SN : O(N)
        """
       if not root:
            return None
        stack = [root]
        while stack:
            root = stack.pop()
            if root:
                if root.val == val:
                    return root
                elif root.val < val:
                    stack.append(root.right)
                else:
                    stack.append(root.left)
        return None"""
        # Without stack
        #SN : O(1)
        while root and root.val != val:
            root = root.left if root.val > val else root.right
        return root
