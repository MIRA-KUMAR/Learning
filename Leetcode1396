import collections


class UndergroundSystem:

    def __init__(self):
        self.checkin_data = collections.defaultdict()
        self.journey_data = collections.defaultdict(list)

    def checkIn(self, id: int, stationName: str, t: int) -> None:
        self.checkin_data[id] = [stationName, t]

    def checkOut(self, id: int, stationName: str, t: int) -> None:
        startStation, startTime = self.checkin_data.pop(id)
        self.journey_data[(startStation, stationName)].append(t - startTime)

    def getAverageTime(self, startStation: str, endStation: str) -> float:
        return sum(self.journey_data[(startStation, endStation)]) / len(self.journey_data[(startStation, endStation)])


# Your UndergroundSystem object will be instantiated and called as such:
# obj = UndergroundSystem()
# obj.checkIn(id,stationName,t)
# obj.checkOut(id,stationName,t)
# param_3 = obj.getAverageTime(startStation,endStation)
