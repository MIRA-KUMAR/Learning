# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    # def __init__(self):
    #     self.total = 0

    def convertBST(self, root):

        # 1. Recursive:
        # if not root:
        #     return None
        # self.convertBST(root.right)
        # self.total += root.val
        # root.val = self.total
        # self.convertBST(root.left)
        # return root

        # 2. Iterative:
        stack = []
        total = 0
        node = root
        while node or stack:
            while node:
                stack.append(node)
                node = node.right
            node = stack.pop()
            total += node.val
            node.val = total
            node = node.left

        return root
