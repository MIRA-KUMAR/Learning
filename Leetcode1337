class Solution:
    def kWeakestRows(self, mat, k):
        # Time complexity : O(m(n+logm))
        # m -> rows, n -> cols
        # Space complexity : O(m)
        res = {}
        for i in range(len(mat)):
            s = 0
            for j in range(len(mat[0])):
                s += mat[i][j]
            res[i] = s

        op = []
        res = sorted(res.items(), key=lambda x: x[1])
        for i, j in res:
            if k:
                op.append(i)
                k -= 1

        return op if op else [0]
