import heapq


class Solution:
    def lastStoneWeight(self, stones: List[int]) -> int:
        # TN : O(N)
        """while len(stones) > 1:
            x = max(stones)
            stones.remove(max(stones))
            y = max(stones)
            stones.remove(max(stones))
            stones.append(abs(x - y))
        return stones[0]"""

        # TN : O(NlogN)
        """stones.sort()
        while len(stones) > 1:
            x = stones.pop()
            y = stones.pop()
            bisect.insort(stones, abs(x-y))
        return stones[0]"""

        # Heapify : TN : O(NlogN)
        stones = [x*-1 for x in stones]
        heapq.heapify(stones)
        while len(stones) > 1:
            a = heapq.heappop(stones)
            b = heapq.heappop(stones)
            heapq.heappush(stones, a-b)
        return stones[0]*-1
