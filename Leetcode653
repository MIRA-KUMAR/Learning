from collections import Counter
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right


class Solution:
    def findTarget(self, root, k):

        stack = [root]
        d = {}
        while stack:
            root = stack.pop()
            if root:
                d[root.val] = 1 + d.setdefault(root.val, 0)
                stack.append(root.left)
                stack.append(root.right)
        for key, val in d.items():
            t = k - key
            if t == key:
                if d[key] > 1:
                    return True
            elif t in d:
                return True
        return False

        """
        if not root:
            return None
        stack = [root]
        
        s = set()
        while stack:
            root = stack.pop()
            comp = k - root.val
            if comp in s:
                return True
            if root.left:
                stack.append(root.left)
            if root.right:
                stack.append(root.right)
            s.add(root.val)
        return False"""
