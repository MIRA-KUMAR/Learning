# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:

        if not head:
            return None

        count = 0
        dummy = ListNode(0, head)
        res = dummy

        while head:
            count += 1
            head = head.next

        ct = count - n
        while ct > 0:
            res = res.next
            ct -= 1

        # delete
        res.next = res.next.next

        return dummy.next

#         dummy = ListNode(0, head)
#         left, right = dummy, head

#         while n > 0 and right:
#             right = right.next
#             n -= 1

#         while right:
#             left, right = left.next, right.next

#         #delete
#         left.next = left.next.next

#         return dummy.next
